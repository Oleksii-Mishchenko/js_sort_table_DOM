{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","rows","querySelectorAll","header","addEventListener","ev","cellNum","target","cellIndex","cellContent","children","textContent","cellDataType","Number","isInteger","startsWith","sort","row1","row2","firstCell","secondCell","slice","replace","localeCompare","forEach","row","append"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAOH,EAAMI,iBAAiB,MAC9BC,EAASJ,SAASC,cAAc,SAEtCG,EAAOC,iBAAiB,QAAS,SAAAC,GACzBC,IAAAA,EAAUD,EAAGE,OAAOC,UACpBC,EAAcR,EAAK,GAAGS,SAASJ,GAASK,YAC1CC,EAAe,GAGjBA,EADEC,OAAOC,WAAWL,GACL,MACNA,EAAYM,WAAW,KACjB,MAEA,MAGE,EAAId,GAAMe,KAAK,SAACC,EAAMC,GACnCC,IAAAA,EAAYF,EAAKP,SAASJ,GAASK,YACnCS,EAAaF,EAAKR,SAASJ,GAASK,YAEhCC,OAAAA,GACD,IAAA,MACIO,OAAAA,EAAYC,EAChB,IAAA,MAIID,OAHPA,EAAYA,EAAUE,MAAM,GAAGC,QAAQ,IAAK,MAC5CF,EAAaA,EAAWC,MAAM,GAAGC,QAAQ,IAAK,KAG3C,IAAA,MACIH,OAAAA,EAAUI,cAAcH,GACjC,QACE,UAIKI,QAAQ,SAAAC,GACjB3B,EAAM4B,OAAOD","file":"main.cc9a14b7.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('tbody');\nconst rows = table.querySelectorAll('tr');\nconst header = document.querySelector('thead');\n\nheader.addEventListener('click', ev => {\n  const cellNum = ev.target.cellIndex;\n  const cellContent = rows[0].children[cellNum].textContent;\n  let cellDataType = '';\n\n  if (Number.isInteger(+cellContent)) {\n    cellDataType = 'num';\n  } else if (cellContent.startsWith('$')) {\n    cellDataType = 'usd';\n  } else {\n    cellDataType = 'str';\n  }\n\n  const sortedRows = [...rows].sort((row1, row2) => {\n    let firstCell = row1.children[cellNum].textContent;\n    let secondCell = row2.children[cellNum].textContent;\n\n    switch (cellDataType) {\n      case 'num':\n        return firstCell - secondCell;\n      case 'usd':\n        firstCell = firstCell.slice(1).replace(',', '');\n        secondCell = secondCell.slice(1).replace(',', '');\n\n        return firstCell - secondCell;\n      case 'str':\n        return firstCell.localeCompare(secondCell);\n      default:\n        return;\n    };\n  });\n\n  sortedRows.forEach(row => {\n    table.append(row);\n  });\n});\n"]}